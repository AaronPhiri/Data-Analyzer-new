class UsersController < ApplicationController
  before_action :set_user, only: [:show, :edit, :update, :destroy]
<<<<<<< HEAD
 
  # GET /users
  # GET /users.json
  def index

    @users = User.all.paginate(page: params[:page], per_page: 6)
  end

  # GET /users/1
  # GET /users/1.json
  def show
  
=======

  # GET /users
  # GET /users.json
  def index
    @users = User.all
  end
  def have
     redirect_to 'index'
   end
  # GET /users/1
  # GET /users/1.json
  def show
>>>>>>> 848c0b16b5889221e50d72ddca325c6964217d09
  end

  # GET /users/new
  def new
<<<<<<< HEAD
    #@user = User.new
=======
    @user = User.new
>>>>>>> 848c0b16b5889221e50d72ddca325c6964217d09
  end

  # GET /users/1/edit
  def edit
<<<<<<< HEAD

  end
  def search
  #@user=params.require(:user).permit(:name)
    #@user=User.find_all_by_name("Aaron")
    #@user = User.find_by_sql("select * from users where name='Aaron'")
   #@user = User.find_by_sql("select * from users where name=#{params[:name]}")
    #@user = User.find_by_name(params[:name])
   

 # raise params[:user][:name].to_yaml
    @user = User.find_by_sql(["select * from users where name=?",params[:user][:name]])
 if @user.any?

 @person=@user
 else
 
respond_to do |format|
 format.html { redirect_to users_url, nouser: "Sory you dont have a user by that name,pleas try another name! or create that user!" }
  
  end
end
  
  
   end
=======
  end
>>>>>>> 848c0b16b5889221e50d72ddca325c6964217d09

  # POST /users
  # POST /users.json
  def create
    @user = User.new(user_params)

    respond_to do |format|
      if @user.save
<<<<<<< HEAD
        format.html { redirect_to users_url, notice: "User #{@user.name} was successfully added on the list of users." }
=======
        format.html { redirect_to users_url, notice: "User #{@user.name} was successfully created." }
>>>>>>> 848c0b16b5889221e50d72ddca325c6964217d09
        format.json { render :show, status: :created, location: @user }
      else
        format.html { render :new }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /users/1
  # PATCH/PUT /users/1.json
  def update
    respond_to do |format|
      if @user.update(user_params)
        format.html { redirect_to users_url, notice: "User #{@user.name} was successfully updated." }
        format.json { render :show, status: :ok, location: @user }
      else
        format.html { render :edit }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /users/1
  # DELETE /users/1.json
  def destroy
		begin
<<<<<<< HEAD
  
    @user.destroy

=======
    @user.destroy
>>>>>>> 848c0b16b5889221e50d72ddca325c6964217d09
			flash[:alert] = "User #{@user.name} deleted"
		rescue StandardError => e
			flash[:alert] = e.message
		end
    respond_to do |format|
<<<<<<< HEAD
      format.html { redirect_to users_url, notice: "User #{@user.name} was successfully removed on the list of users." }
=======
      format.html { redirect_to users_url, notice: 'User was successfully destroyed.' }
>>>>>>> 848c0b16b5889221e50d72ddca325c6964217d09
      format.json { head :no_content }
    end
  end

	
  private
    # Use callbacks to share common setup or constraints between actions.
    def set_user
<<<<<<< HEAD

=======
>>>>>>> 848c0b16b5889221e50d72ddca325c6964217d09
      @user = User.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def user_params
<<<<<<< HEAD
      params.require(:user).permit(:name, :password_digest, :password_confirmation)
=======
      params.require(:user).permit(:name, :password, :password_confirmation)
>>>>>>> 848c0b16b5889221e50d72ddca325c6964217d09
    end
end
